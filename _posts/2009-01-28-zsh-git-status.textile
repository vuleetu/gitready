---
published: false
layout: post
title: zsh git status
category: advanced
---

Sure, you could have status shown in your "bash prompt":http://gitready.com/advanced/2009/01/23/status-in-your-prompt.html but that's not your only option for shells! "zsh":http://www.zsh.org/, or "Z Shell":http://en.wikipedia.org/wiki/Zsh is another popular command line interface that is in use by plenty of programmers, and there's quite a few scripts that will get your repo's status shown easily and quickly.

"Joshua Corbin":http://github.com/jcorbin has thrown together a fantastic set of scripts dubbed "zsh-git":http://github.com/jcorbin/zsh-git that provides a great mix of colors and information about your repository. The basics are explained on the "project page":http://www.wunjo.org/zsh-git/ but images are a lot more fun. 

This is what the shell looks by default. Plenty of colors, and even using both sides of the screen! In a repository with no changes, it shows the branch name and where HEAD is currently pointing:

p=. !/images/zsh-normal.png!

Once a change is made, a ! appears (@git status@ is run since the author can't break habits easily) If untracked files are created, it adds ? to the prompt, and adding files causes a + to be printed to the prompt. Also, if you're tracking the branch, it will alert you and let you know when you're ahead in commits. 

p=. !/images/zsh-workflow.png!

If you're looking for a more DIY version, "Bart Trojanowski":http://www.jukie.net/~bart has a "great tutorial on adding branch status":http://www.jukie.net/~bart/blog/20071219221358 that can be easily extended. If you're looking for another nice and easy zsh setup, "zshkit":http://github.com/mattfoster/zshkit/tree/master and its various forks are fun to use and come packaged with plenty of helper commands. 

Of course, if you have other zsh scripts or different shells that deserve their own tip, "submit one!":http://gitready.com/submit.html
